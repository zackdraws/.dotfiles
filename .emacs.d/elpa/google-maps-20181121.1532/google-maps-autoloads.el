;;; google-maps-autoloads.el --- automatically extracted autoloads (do not edit)   -*- lexical-binding: t -*-
;; Generated by the `loaddefs-generate' function.

;; This file is part of GNU Emacs.

;;; Code:

(add-to-list 'load-path (or (and load-file-name (directory-file-name (file-name-directory load-file-name))) (car load-path)))



;;; Generated autoloads from google-maps.el

(autoload 'google-maps "google-maps" "\
Run Google Maps on LOCATION.
If NO-GEOCODING is t, then does not try to geocode the address
and do not ask the user for a more precise location.

(fn LOCATION &optional NO-GEOCODING)" t)
(register-definition-prefixes "google-maps" '("google-maps-history"))


;;; Generated autoloads from google-maps-base.el

(register-definition-prefixes "google-maps-base" '("google-maps-" "mapconcat-if-not"))


;;; Generated autoloads from google-maps-geocode.el

(autoload 'google-maps-geocode-replace-region "google-maps-geocode" "\
Geocode region and replace it with a more accurate result.

(fn BEG END)" t)
(register-definition-prefixes "google-maps-geocode" '("google-maps-geocode-"))


;;; Generated autoloads from google-maps-static.el

(autoload 'google-maps-static-mode "google-maps-static" "\
A major mode for Google Maps service

(fn)" t)
(register-definition-prefixes "google-maps-static" '("google-maps-"))


;;; Generated autoloads from org-location-google-maps.el

(autoload 'org-location-google-maps "org-location-google-maps" "\
Show Google Map for location of an Org entry in an org buffer.
If WITH-CURRENT-LOCATION prefix is set, add a marker with current
location.

(fn &optional WITH-CURRENT-LOCATION)" t)
(autoload 'org-agenda-location-google-maps "org-location-google-maps" "\
Show Google Map for location of an Org entry in an org-agenda buffer.

(fn &optional WITH-CURRENT-LOCATION)" t)
(autoload 'org-address-google-geocode-set "org-location-google-maps" "\
Set address property to LOCATION address for current entry using Google Geocoding API.

(fn LOCATION)" t)
(autoload 'org-coordinates-google-geocode-set "org-location-google-maps" "\
Set coordinates property to LOCATION coordinates for current entry using Google Geocoding API.

(fn LOCATION)" t)
(autoload 'org-google-maps-key-bindings "org-location-google-maps")
(autoload 'org-agenda-google-maps-key-bindings "org-location-google-maps")
(eval-after-load 'org '(org-google-maps-key-bindings))
(eval-after-load 'org-agenda '(org-agenda-google-maps-key-bindings))
(register-definition-prefixes "org-location-google-maps" '("org-google-maps"))

;;; End of scraped data

(provide 'google-maps-autoloads)

;; Local Variables:
;; version-control: never
;; no-byte-compile: t
;; no-update-autoloads: t
;; no-native-compile: t
;; coding: utf-8-emacs-unix
;; End:

;;; google-maps-autoloads.el ends here
