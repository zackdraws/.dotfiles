def add_image_grid(pdf, image_paths, image_width, max_per_row, spacing, margin):

    """

    Adds a list of images to the PDF in a grid with captions.

    Automatically adds a new page if the row won't fit.

    """

    print(f"üß© Adding image grid: {len(image_paths)} images, {max_per_row} per row")



    caption_height = 6

    row_height = image_width + caption_height + spacing

    count = 0

    x = margin

    y = pdf.get_y()



    for img in image_paths:

        if count and count % max_per_row == 0:

            # Start of new row

            y += row_height

            if y + row_height > pdf.h - margin:

                pdf.add_page()

                y = margin

            pdf.set_y(y)

            x = margin



        # Check if this row will overflow the page

        if count % max_per_row == 0 and y + row_height > pdf.h - margin:

            pdf.add_page()

            y = margin

            pdf.set_y(y)

            x = margin



        try:

            pdf.image(img, x=x, y=y, w=image_width)

            caption = os.path.basename(img)

            pdf.set_xy(x, y + image_width + 1)

            pdf.set_font("DejaVu", size=10)

            pdf.multi_cell(image_width, caption_height, caption, align='L')

            pdf.set_font("DejaVu", size=12)

        except Exception as e:

            print(f"‚ö†Ô∏è  Could not add image {img}: {e}")

            pdf.set_xy(x, y)

            pdf.multi_cell(image_width, 10, "[Image error]")



        x += image_width + spacing

        count += 1



    # Set Y cursor to bottom of the final row

    pdf.set_y(y + row_height)
def add_image_grid(pdf, image_paths, image_width, max_per_row, spacing, margin):

    """

    Adds a list of images to the PDF in a grid with captions.

    Automatically adds a new page if the row won't fit.

    """

    print(f"üß© Adding image grid: {len(image_paths)} images, {max_per_row} per row")



    caption_height = 6

    row_height = image_width + caption_height + spacing

    count = 0

    x = margin

    y = pdf.get_y()



    for img in image_paths:

        if count and count % max_per_row == 0:

            # Start of new row

            y += row_height

            if y + row_height > pdf.h - margin:

                pdf.add_page()

                y = margin

            pdf.set_y(y)

            x = margin



        # Check if this row will overflow the page

        if count % max_per_row == 0 and y + row_height > pdf.h - margin:

            pdf.add_page()

            y = margin

            pdf.set_y(y)

            x = margin



        try:

            pdf.image(img, x=x, y=y, w=image_width)

            caption = os.path.basename(img)

            pdf.set_xy(x, y + image_width + 1)

            pdf.set_font("DejaVu", size=10)

            pdf.multi_cell(image_width, caption_height, caption, align='L')

            pdf.set_font("DejaVu", size=12)

        except Exception as e:

            print(f"‚ö†Ô∏è  Could not add image {img}: {e}")

            pdf.set_xy(x, y)

            pdf.multi_cell(image_width, 10, "[Image error]")



        x += image_width + spacing

        count += 1



    # Set Y cursor to bottom of the final row

    pdf.set_y(y + row_height)
