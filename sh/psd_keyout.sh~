#!/bin/bash



# Exit on error

set -e



# Check if Python 3 is installed

if ! command -v python3 &>/dev/null; then

    echo "‚ùå Python3 not found. Please install Python3."

    exit 1

fi



# Check for image input

if [ $# -lt 1 ]; then

    echo "Usage: ./keyout_white.sh input.jpg"

    exit 1

fi



# Input file

INPUT="$1"



# Verify file exists

if [ ! -f "$INPUT" ]; then

    echo "‚ùå File not found: $INPUT"

    exit 1

fi



# Strip extension and append _transparent

FILENAME=$(basename -- "$INPUT")

BASENAME="${FILENAME%.*}"

EXT="${FILENAME##*.}"

OUTPUT="${BASENAME}_transparent.png"



# Automatically install packages if missing

python3 - <<EOF

try:

    import cv2

    import numpy

except ImportError:

    print("üì¶ Installing required packages...")

    import subprocess

    subprocess.check_call(["pip3", "install", "--user", "opencv-python", "numpy"])

EOF



# Run the keying script

python3 - <<EOF

import cv2

import numpy as np



input_path = "$INPUT"

output_path = "$OUTPUT"



image = cv2.imread(input_path)

if image is None:

    raise ValueError("Failed to load image: " + input_path)



image_rgba = cv2.cvtColor(image, cv2.COLOR_BGR2BGRA)



lower_white = np.array([200, 200, 200, 255], dtype=np.uint8)

upper_white = np.array([255, 255, 255, 255], dtype=np.uint8)



white_mask = cv2.inRange(image_rgba, lower_white, upper_white)

image_rgba[white_mask == 255] = [0, 0, 0, 0]



cv2.imwrite(output_path, image_rgba)

print(f"‚úÖ Saved: {output_path}")

EOF
